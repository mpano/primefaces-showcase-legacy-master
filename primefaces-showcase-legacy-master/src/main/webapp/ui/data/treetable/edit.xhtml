<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="./template.xhtml">
    <ui:define name="head">
        <style type="text/css">
            .ui-row-editor .ui-icon-pencil {
                margin-left:8px;
            }

            .ui-editable-column .ui-cell-editor-input {
                overflow: hidden;
            }

            .ui-editable-column .ui-cell-editor-input * {
                box-sizing: border-box;
            }
        </style>
    </ui:define>
    
    <ui:define name="title">
        TreeTable - <span class="subitem">Edit</span>
    </ui:define>

    <ui:define name="description">
        Data displayed on treetable can be edited at row or cell level.
    </ui:define>

    <ui:define name="implementation">

         <h:form id="form">
            <p:growl id="msgs" showDetail="true"/>

            <p:treeTable value="#{ttEditView.root}" editable="true" var="document" style="margin-bottom:20px">
                <f:facet name="header">
                    Row Editing
                </f:facet>
                
                <p:ajax event="rowEdit" listener="#{ttEditView.onRowEdit}" update=":form:msgs" />
                <p:ajax event="rowEditCancel" listener="#{ttEditView.onRowCancel}" update=":form:msgs" />

                <p:column headerText="Name"> 
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.name}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.name}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="Size">
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.size}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.size}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="Type">
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.type}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.type}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column style="width:32px">
                    <p:rowEditor />
                </p:column>
            </p:treeTable>

            <p:treeTable value="#{ttEditView.root2}" editable="true" editMode="cell" var="document">
                <f:facet name="header">
                    Cell Editing
                </f:facet>
                
                <p:ajax event="cellEdit" listener="#{ttEditView.onCellEdit}" update=":form:msgs" />

                <p:column headerText="Name"> 
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.name}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.name}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="Size">
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.size}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.size}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
                <p:column headerText="Type">
                    <p:cellEditor>
                        <f:facet name="output"><h:outputText value="#{document.type}" /></f:facet>
                        <f:facet name="input"><p:inputText value="#{document.type}" style="width:100%"/></f:facet>
                    </p:cellEditor>
                </p:column>
            </p:treeTable>
         </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="edit.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form id="form"&gt;
    &lt;p:growl id="msgs" showDetail="true"/&gt;

    &lt;p:treeTable value="\#{ttEditView.root}" editable="true" var="document" style="margin-bottom:20px"&gt;
        &lt;f:facet name="header"&gt;
            Row Editing
        &lt;/f:facet&gt;

        &lt;p:ajax event="rowEdit" listener="\#{ttEditView.onRowEdit}" update=":form:msgs" /&gt;
        &lt;p:ajax event="rowEditCancel" listener="\#{ttEditView.onRowCancel}" update=":form:msgs" /&gt;

        &lt;p:column headerText="Name"&gt; 
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.name}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.name}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
        &lt;p:column headerText="Size"&gt;
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.size}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.size}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
        &lt;p:column headerText="Type"&gt;
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.type}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.type}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
        &lt;p:column style="width:32px"&gt;
            &lt;p:rowEditor /&gt;
        &lt;/p:column&gt;
    &lt;/p:treeTable&gt;

    &lt;p:treeTable value="\#{ttEditView.root2}" editable="true" editMode="cell" var="document"&gt;
        &lt;f:facet name="header"&gt;
            Cell Editing
        &lt;/f:facet&gt;

        &lt;p:ajax event="cellEdit" listener="\#{ttEditView.onCellEdit}" update=":form:msgs" /&gt;

        &lt;p:column headerText="Name"&gt; 
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.name}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.name}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
        &lt;p:column headerText="Size"&gt;
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.size}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.size}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
        &lt;p:column headerText="Type"&gt;
            &lt;p:cellEditor&gt;
                &lt;f:facet name="output"&gt;&lt;h:outputText value="\#{document.type}" /&gt;&lt;/f:facet&gt;
                &lt;f:facet name="input"&gt;&lt;p:inputText value="\#{document.type}" style="width:100%"/&gt;&lt;/f:facet&gt;
            &lt;/p:cellEditor&gt;
        &lt;/p:column&gt;
    &lt;/p:treeTable&gt;
 &lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="EditView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.data.treetable;

import java.io.Serializable;
import javax.annotation.PostConstruct;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;
import org.primefaces.event.CellEditEvent;
import org.primefaces.event.RowEditEvent;
import org.primefaces.model.TreeNode;
import org.primefaces.showcase.service.DocumentService;

@ManagedBean(name = "ttEditView")
@ViewScoped
public class EditView implements Serializable{
    
    private TreeNode root;
    
    private TreeNode root2;
    
    @ManagedProperty("\#{documentService}")
    private DocumentService service;
    
    @PostConstruct
    public void init() {
        root = service.createDocuments();
        root2 = service.createDocuments();
    }

    public TreeNode getRoot() {
        return root;
    }

    public TreeNode getRoot2() {
        return root2;
    }
    
    public void setService(DocumentService service) {
        this.service = service;
    }
    
    public void onRowEdit(RowEditEvent event) {
        FacesMessage msg = new FacesMessage("Document Edited", ((TreeNode) event.getObject()).toString());
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
    
    public void onRowCancel(RowEditEvent event) {
        FacesMessage msg = new FacesMessage("Edit Cancelled", ((TreeNode) event.getObject()).toString());
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
    
    public void onCellEdit(CellEditEvent event) {
        Object oldValue = event.getOldValue();
        Object newValue = event.getNewValue();
        
        if(newValue != null &amp;&amp; !newValue.equals(oldValue)) {
            FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Cell Changed", "Old: " + oldValue + ", New:" + newValue);
            FacesContext.getCurrentInstance().addMessage(null, msg);
        }
    } 
}
                </pre>
            </p:tab>
            
            <p:tab title="DocumentService.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.service;

import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;
import org.primefaces.model.DefaultTreeNode;
import org.primefaces.model.TreeNode;
import org.primefaces.showcase.domain.Document;

@ManagedBean(name = "documentService")
@ApplicationScoped
public class DocumentService {
    
    public TreeNode createDocuments() {
        TreeNode root = new DefaultTreeNode(new Document("Files", "-", "Folder"), null);
		
		TreeNode documents = new DefaultTreeNode(new Document("Documents", "-", "Folder"), root);
		TreeNode pictures = new DefaultTreeNode(new Document("Pictures", "-", "Folder"), root);
		TreeNode movies = new DefaultTreeNode(new Document("Movies", "-", "Folder"), root);
		
		TreeNode work = new DefaultTreeNode(new Document("Work", "-", "Folder"), documents);
		TreeNode primefaces = new DefaultTreeNode(new Document("PrimeFaces", "-", "Folder"), documents);
		
		//Documents
		TreeNode expenses = new DefaultTreeNode("document", new Document("Expenses.doc", "30 KB", "Word Document"), work);
		TreeNode resume = new DefaultTreeNode("document", new Document("Resume.doc", "10 KB", "Word Document"), work);
		TreeNode refdoc = new DefaultTreeNode("document", new Document("RefDoc.pages", "40 KB", "Pages Document"), primefaces);
		
		//Pictures
		TreeNode barca = new DefaultTreeNode("picture", new Document("barcelona.jpg", "30 KB", "JPEG Image"), pictures);
		TreeNode primelogo = new DefaultTreeNode("picture", new Document("logo.jpg", "45 KB", "JPEG Image"), pictures);
		TreeNode optimus = new DefaultTreeNode("picture", new Document("optimusprime.png", "96 KB", "PNG Image"), pictures);
		
		//Movies
		TreeNode pacino = new DefaultTreeNode(new Document("Al Pacino", "-", "Folder"), movies);
		TreeNode deniro = new DefaultTreeNode(new Document("Robert De Niro", "-", "Folder"), movies);
		
		TreeNode scarface = new DefaultTreeNode("mp3", new Document("Scarface", "15 GB", "Movie File"), pacino);
		TreeNode carlitosWay = new DefaultTreeNode("mp3", new Document("Carlitos' Way", "24 GB", "Movie File"), pacino);
		
		TreeNode goodfellas = new DefaultTreeNode("mp3", new Document("Goodfellas", "23 GB", "Movie File"), deniro);
		TreeNode untouchables = new DefaultTreeNode("mp3", new Document("Untouchables", "17 GB", "Movie File"), deniro);
        
        return root;
    }
}
                </pre>
            </p:tab>
            
            <p:tab title="Document.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.domain;

import java.io.Serializable;

public class Document implements Serializable, Comparable&lt;Document&gt; {

	private String name;
	
	private String size;
	
	private String type;
	
	public Document(String name, String size, String type) {
		this.name = name;
		this.size = size;
		this.type = type;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSize() {
		return size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	//Eclipse Generated hashCode and equals
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((size == null) ? 0 : size.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Document other = (Document) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (size == null) {
			if (other.size != null)
				return false;
		} else if (!size.equals(other.size))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return name;
	}

    public int compareTo(Document document) {
        return this.getName().compareTo(document.getName());
    }
}
                </pre>
            </p:tab>
            
        </p:tabView>

    </ui:define>

</ui:composition>